openapi: 3.0.3
info:
  title: Github API
  version: 2.0.0
  description: API to manage the repo

servers:
  - url: https://api.github.com

paths:
  /user/repos:
    get:
      summary: List repositories for authenticated users
      description: Returns repositories of the authenticated users
      security:
        - tokenAuth: []
      parameters:
        - name: visibility
          in: query
#          required: false
          schema:
            type: string
            enum:
              - all
              - private
              - public
      responses:
        '200':
          description: Lists repositories of authenticated user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Repository'
        '401':
          description: Unauthorized
    post:
      summary: Create repositories for authenticated users
      description: Returns created repositories of the authenticated users
      security:
        - tokenAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              additionalProperties: true
              properties:
                name:
                  type: string
                  example: my-new-repo
                  description: Name of the repository.
                description:
                  type: string
                private:
                  type: boolean
      responses:
        '201':
          description: Repository created successfully
          content:
            application/json:
              example:
                id: 123456
                name: my-new-repo
                full_name: balaji/my-new-repo
                private: false
                description: "This is my new repository."
              schema:
                $ref: '#/components/schemas/Repository'

        '401':
          description: Authentication failed or missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Authentication failed. Please provide a valid token."
                  error_code:
                    type: integer
                    example: 401
              example:
                message: "Authentication failed. Please provide a valid token."
                error_code: 401


components:
  securitySchemes:
    tokenAuth:
      type: http
      scheme: bearer
      bearerFormat: "token"

  schemas:
    Owner:
      type: object
      additionalProperties: true
      required:
        - login
        - id
      properties:
        login:
          type: string
        id:
          type: integer
          format: int64


    Permissions:
      type: object
      additionalProperties: true
      properties:
        admin:
          type: boolean

    Repository:
      type: object
      additionalProperties: true
      required:
        - id
        - name
        - private
        - full_name
        - owner
        - html_url
        - description
        - default_branch
      properties:
        id:
          type: integer
        node_id:
          type: string
        name:
          type: string
        full_name:
          type: string
        private:
          type: boolean
        owner:
          $ref: '#/components/schemas/Owner'
        html_url:
          type: string
          format: uri
        description:
          type: string
          nullable: true
        default_branch:
          type: string
        permission:
            $ref: '#/components/schemas/Permissions'











